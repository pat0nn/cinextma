version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: auth_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # # Redis Cache
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # # Auth Service
  # auth-service:
  #   build: .
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - DEBUG=False
  #     - SECRET_KEY=your-secret-key-here
  #     - DB_NAME=auth_service
  #     - DB_USER=postgres
  #     - DB_PASSWORD=postgres
  #     - DB_HOST=db
  #     - DB_PORT=5432
  #     - REDIS_URL=redis://redis:6379/1
  #     - JWT_SECRET_KEY=your-jwt-secret-key-here
  #     - ALLOWED_HOSTS=localhost,127.0.0.1,auth-service
  #     - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   volumes:
  #     - ./logs:/app/logs
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

  # # Nginx (Optional - for production)
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./docker/nginx.conf:/etc/nginx/nginx.conf
  #     - ./staticfiles:/app/staticfiles
  #   depends_on:
  #     - auth-service
  #   profiles:
  #     - production

volumes:
  postgres_data:
 # redis_data:
